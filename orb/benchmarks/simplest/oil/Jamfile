# (c) Copyright 2012,2013 Felipe Magno de Almeida
#
# Distributed under the Boost Software License, Version 1.0. (See
# accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

import feature ;
import string ;

rule idl2lua ( target : sources + )
{
  make $(target)
    : $(sources)
    : action-idl2lua
  ;
  explicit $(target) ;
}

actions action-idl2lua
{
  lua5.1 -e "package.path=package.path..';/home/felipe/dev/tecgraf/openbus2/openbus/build/oil-source-0.5snapshot/lua/?.lua;/home/felipe/dev/tecgraf/openbus2/openbus/build/loop-2snapshot/lua/?.lua'" \
    /home/felipe/dev/tecgraf/openbus2/openbus/build/oil-source-0.5snapshot/lua/idl2lua.lua \
    -o $(<) \
    $(>)
}


rule pre-compile ( target : sources + )
{
  make $(target)
    : $(sources)
    : @action-pre-compile
  ;
  explicit $(target) ;

  make $(target:S=.h)
    : $(target)
    : @dummy
  ;
  explicit $(target:S=.h) ;
}

rule action-pre-compile ( target : sources + : requirements * )
{
  local lua-path ;
  for source in $(sources)
  {
    local path = [ on $(source) return $(LOCATE) ] ;

    if $(path)
    {
      lua-path += $(path)/?.lua ;
    }
    else if ! ?.lua in $(lua-path)
    {
      lua-path += ?.lua ;
    }
  }
  LUA_PATH on $(<) = [ string.join $(lua-path) : \; ] ;
}

# -l precisa pegar todos os diretorios aonde estao os fontes
actions action-pre-compile
{
  lua5.1 -e "package.path=package.path..';/home/felipe/dev/tecgraf/openbus2/openbus/build/loop-2snapshot/lua/?.lua'" \
    /home/felipe/dev/tecgraf/openbus2/openbus/build/loop-2snapshot/lua/preloader.lua \
    -l "$(LUA_PATH)" \
    -d "$(<:D)" \
    -h "$(<:S=.h:D=)" \
    -o "$(<:D=)" \
    "$(>)"
}


actions dummy
{
  #does nothing
}

idl2lua parsed.lua : ../simplest.idl ;

pre-compile server.c : server.lua parsed.lua ;
pre-compile client.c : client.lua parsed.lua ;

#feature.feature morbid-oil-server : no yes : composite link-incompatible ;
#feature.compose <morbid-oil-server>yes : <define>MORBID_OIL_SERVER ;

lib dl : : <link>shared ;
explicit dl ;

obj launcher_server.obj : launcher.c /oil//oil
 : <define>MORBID_OIL_SERVER
 ;
explicit launcher_server.obj ;

obj servlibs_server.obj : servlibs.c /oil//oil
 : <define>MORBID_OIL_SERVER
   <implicit-dependency>server.h
 ;
explicit servlibs_server.obj ;

exe server : server.c servlibs_server.obj launcher_server.obj dl /oil//oil
 : <implicit-dependency>server.h
 ;
explicit server ;
exe client : client.c servlibs.c launcher.c dl /oil//oil
 : <implicit-dependency>client.h
 ;
explicit client ;
